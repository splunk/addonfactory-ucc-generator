import{j as c}from"./jsx-runtime-1FKYbnEZ.js";import{a as i,u as p,e as u}from"./index-DkzrWKzW.js";import{s as d}from"./util-BVaVe7dF.js";import{h as s,H as l}from"./index-kle9pbY7.js";import{I as m}from"./InputPage-ImWygKed.js";import"./index-prPvd6Su.js";import"./_commonjsHelpers-CE1G-McA.js";import"./iframe-D1ZpU7rR.js";import"./index-BAMY2Nnw.js";import"./_baseIteratee-CGcCafy9.js";import"./omit-UcH284-_.js";import"./ControlWrapper-C-3SaADr.js";import"./Number-akKODsrJ.js";import"./isEqual-YuU2Zr8y.js";import"./Dropdown-CEDZaBsM.js";import"./Clickable-vbs6x6a2.js";import"./_arrayIncludesWith-C0sUgJs0.js";import"./includes-BxfbO0I6.js";import"./Box-CA7p2Imy.js";import"./index-BQPxV8oF.js";import"./AnimationToggle-CdPY36C5.js";import"./ScrollContainerContext-DNG8B1ai.js";import"./ChevronRight-Do8a4H-E.js";import"./Menu-D4-b3kko.js";import"./Divider-HUVeSv0X.js";import"./ScreenReaderContent-DRRIcB0C.js";import"./url-C03nQury.js";import"./Button-gbqT1swN.js";import"./ButtonSimple-uRr2gocj.js";import"./Link-ooEZC2Mq.js";import"./CollapsiblePanel-BAnOmC7s.js";import"./_baseDifference-BqVURxtm.js";import"./WaitSpinner-DIBk8RZx.js";import"./ExclamationTriangle-C7EecpCM.js";import"./pick-BOH874jN.js";import"./InformationCircle-kDXLS5kt.js";import"./index-DtbBJ32H.js";import"./MarkdownMessage-Duo508BE.js";import"./Button-B_-pY_Ng.js";import"./variables-BJ06o7R7.js";import"./textUtils-CXkcwnOE.js";import"./api-BXYB3TVR.js";import"./url-uLXecbUQ.js";import"./messageUtil-CvmCOD_s.js";import"./script-ClADN3Yb.js";import"./Group-BGuJRPkj.js";import"./usePlatform-B4VghJKE.js";import"./Error-BqSQnwF8.js";import"./ErrorBoundary-oRjb1fsE.js";import"./DotsThreeVertical-BlK1i_zF.js";import"./searchUtil-DKzh7vdL.js";import"./Heading-BHO1bh4G.js";import"./index-Da2o7s9M.js";import"./TabBar-Dvr_Y5H1.js";import"./index-CCTXOnLi.js";import"./EntityPage-BdiuKLGt.js";import"./BaseFormView-dsmNhTgc.js";import"./TableContext-gysp-n-m.js";import"./index-BbiZmkAC.js";import"./Message-Bh14h08T.js";import"./Message-DGEUsvzS.js";import"./pageContext-DllO6PNg.js";import"./PageContext-DhAckcxo.js";import"./UCCButton-IGhfY3sr.js";import"./TableWrapper-BeDoGR6W.js";import"./CustomTableStyle-4srtNYm5.js";import"./Search-BQQL0aN1.js";import"./ChevronLeft-BwYkVmJI.js";import"./AcceptModal-Dd61O4RF.js";import"./Modal-BOe57yII.js";import"./Modal-BXcDv01X.js";import"./EntityModal-Dj1UFiw1.js";import"./DeleteModal-B6FTVUNL.js";import"./Search-DHvjbgMH.js";import"./MenuInput-CsrF3Y9W.js";import"./Menu-D7dHzYG8.js";import"./SubDescription-4r8vjCf1.js";const f=[s.get("/servicesNS/:user/-/:serviceName",()=>l.json({entry:[{name:"name",content:"content",id:0}]})),s.post("/servicesNS/:user/-/:serviceName",()=>l.json({entry:[{name:"name",content:"content",id:0}]}))],w={name:"Splunk_TA_aws",displayName:"Splunk Add-on for AWS",version:"7.1.0",restRoot:"restRoot",schemaVersion:"0.0.3"},b={configuration:{title:"",tabs:[{name:"a",title:"",entity:[]}]},inputs:{title:"Inputs",table:{header:[{field:"name",label:"Input Name"}],moreInfo:[{field:"name",label:"Name"}],actions:["edit","delete","search","clone"]},services:[{name:"example_input_four",title:"Title example",entity:[{type:"checkboxTree",label:"CheckboxTreeTitle",field:"api3",options:{groups:[{label:"Group 1",options:{isExpandable:!0,expand:!0},fields:["firstRowUnderGroup1","secondRowUnderGroup1"]},{label:"Group 3",options:{isExpandable:!1,expand:!0},fields:["firstRowUnderGroup3","secondRowUnderGroup3","thirdRowUnderGroup3","fourthRowUnderGroup3"]}],rows:[{field:"rowWithoutGroup",checkbox:{label:"Row without group",defaultValue:!0}},{field:"firstRowUnderGroup1",checkbox:{label:"first row checked under group 1",defaultValue:!0}},{field:"secondRowUnderGroup1",checkbox:{label:"second row checked under group 1",defaultValue:!0}},{field:"firstRowUnderGroup3",checkbox:{label:"first row checked under group 3",defaultValue:!0}},{field:"secondRowUnderGroup3",checkbox:{label:"second row under group 3"}},{field:"thirdRowUnderGroup3",checkbox:{label:"third row checked under group 3",defaultValue:!0}},{field:"fourthRowUnderGroup3",checkbox:{label:"fourth row under group 3"}}]}}]}]}},h={meta:w,pages:b},g={name:"Splunk_TA_aws",displayName:"Splunk Add-on for AWS",version:"7.1.0",restRoot:"restRoot",schemaVersion:"0.0.3"},x={configuration:{title:"",tabs:[{name:"a",title:"",entity:[]}]},inputs:{title:"Inputs",table:{header:[{field:"name",label:"Input Name"}],moreInfo:[{field:"name",label:"Name"}],actions:["edit","delete","search","clone"]},services:[{name:"example_input_four",title:"Title example",entity:[{type:"checkboxTree",label:"CheckboxTreeTitle",field:"api3",required:!0,options:{groups:[{label:"Group 1",options:{isExpandable:!0,expand:!0},fields:["rowUnderGroup1"]},{label:"Group 3",options:{isExpandable:!0,expand:!0},fields:["firstRowUnderGroup3","secondRowUnderGroup3"]}],rows:[{field:"rowWithoutGroup",checkbox:{label:"Row without group",defaultValue:!1}},{field:"rowUnderGroup1",checkbox:{label:"Row under Group 1",defaultValue:!1}},{field:"firstRowUnderGroup3",checkbox:{label:"first row under group 3",defaultValue:!1}},{field:"secondRowUnderGroup3",checkbox:{label:"second row under group 3"}}]}}]}]}},R={meta:g,pages:x},ze={component:m,title:"CheckboxTree/Page",render:(e,{parameters:n})=>(d(n.globalConfig),c.jsx(m,{})),parameters:{globalConfig:h,msw:{handlers:f}},play:async({canvasElement:e})=>{const a=i(e).getByRole("button",{name:"Create New Input"});await p.click(a);const o=i(e.ownerDocument.body);await u(await o.findByRole("dialog")).toBeVisible()}},t={},r={parameters:{globalConfig:R},play:async({canvasElement:e})=>{const a=i(e).getByRole("button",{name:"Create New Input"});await p.click(a);const o=i(e.ownerDocument.body);await u(await o.findByRole("dialog")).toBeVisible(),await p.click(await o.findByText("Add"))}};t.parameters={...t.parameters,docs:{...t.parameters?.docs,source:{originalSource:"{}",...t.parameters?.docs?.source}}};r.parameters={...r.parameters,docs:{...r.parameters?.docs,source:{originalSource:`{
  parameters: {
    globalConfig: CheckboxTreeRequiredConfig
  },
  play: async ({
    canvasElement
  }) => {
    const canvas = within(canvasElement);
    const newInputBtn = canvas.getByRole('button', {
      name: 'Create New Input'
    });
    await userEvent.click(newInputBtn);
    const root = within(canvasElement.ownerDocument.body);
    await expect(await root.findByRole('dialog')).toBeVisible();
    await userEvent.click(await root.findByText('Add'));
  }
}`,...r.parameters?.docs?.source}}};const Fe=["InputPageView","RequiredView"];export{t as InputPageView,r as RequiredView,Fe as __namedExportsOrder,ze as default};
