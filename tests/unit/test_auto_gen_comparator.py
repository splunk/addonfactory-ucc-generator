from splunk_add_on_ucc_framework.auto_gen_comparator import CodeGeneratorDiffChecker
from pathlib import Path
from splunk_add_on_ucc_framework.commands import build


CONF_FILE_CONTENT = """
[launcher]
version = 5.69.1+552213704
description = Some description of Splunk Add-on for UCC Example
author = Splunk Inc.

[install]
build = 1756380010
is_configured = false
state = enabled

[package]
id = Splunk_TA_UCCExample
check_for_updates = true

[ui]
label = Title of Splunk Add-on for UCC Example
supported_themes = light, dark
is_visible = true

"""


def create_file(path: Path, content: str) -> int:
    path.parent.mkdir(parents=True, exist_ok=True)
    return path.write_text(content, encoding="utf-8")


def test_deduce_common_conf_file(tmp_path, caplog, ta_name):
    src_dir = tmp_path / "src"
    dst_dir = tmp_path / "dst"

    # Identical .conf file in both
    src_conf_file = src_dir / "app.conf"
    dst_conf_file = dst_dir / "app.conf"
    create_file(src_conf_file, CONF_FILE_CONTENT)
    create_file(dst_conf_file, CONF_FILE_CONTENT)

    comparator = CodeGeneratorDiffChecker(str(src_dir), str(dst_dir), ta_name)
    comparator.deduce_gen_and_custom_content(build.logger, ignore_file_list=[])

    expected_lines = [
        "Below are the file(s) that are auto generated by the UCC framework. "
        "The below files can be removed from your repository:",
        str(src_conf_file),
        "Please refer UCC framework documentation for the latest features",
    ]

    for line in expected_lines:
        assert line in caplog.text


def test_deduce_different_conf_file(tmp_path, ta_name):
    src_dir = tmp_path / "src"
    dst_dir = tmp_path / "dst"

    # Different .conf files in src and dst
    src_file = src_dir / "app.conf"
    dst_file = dst_dir / "restmap.conf"
    create_file(src_file, CONF_FILE_CONTENT)
    create_file(dst_file, CONF_FILE_CONTENT)

    comparator = CodeGeneratorDiffChecker(str(src_dir), str(dst_dir), ta_name)
    comparator.deduce_gen_and_custom_content(build.logger, ignore_file_list=[])
    assert len(comparator.common_files) == 0


def test_deduce_different_content_in_conf_file(tmp_path, ta_name, caplog):
    src_dir = tmp_path / "src"
    dst_dir = tmp_path / "dst"

    # Different conf content than that present in src app.conf
    src_conf = """
    [launcher]
    version = 5.69.1+552213704
    description = Some description of Splunk Add-on for UCC Example
    author = Splunk Inc.

    [install]
    build = 1756367283
    is_configured = false
    state = enabled

    [package]
    id = Splunk_TA_UCCExample
    check_for_updates = true

    [ui]
    label = Title of Splunk Add-on for UCC Example
    supported_themes = light, dark
    is_visible = true
    docs_section_override=AddOns:released


    [shclustering]
    deployer_push_mode = default_only
    """

    # Identical .conf file in both
    src_file = src_dir / "app.conf"
    dst_file = dst_dir / "app.conf"
    create_file(dst_file, CONF_FILE_CONTENT)
    create_file(src_file, src_conf)

    comparator = CodeGeneratorDiffChecker(str(src_dir), str(dst_dir), ta_name)
    comparator.deduce_gen_and_custom_content(build.logger, ignore_file_list=[])
    expected_msg_for_same_stanza = [
        "Below are the stanzas that can be removed from your source directory as, UCC auto generates it",
        f"1) {str(src_file)} :: launcher",
        f"2) {str(src_file)} :: install",
        f"3) {str(src_file)} :: package",
    ]

    expected_msg_for_diff_stanza = [
        "Below are the stanza(s) that are not auto generated by the UCC framework. "
        "(Optionally), you can raise feature requests for UCC framework at "
        "'https://github.com/splunk/addonfactory-ucc-generator/issues/new/choose' with the output mentioned below.",
        f"1) {str(src_file)} :: shclustering",
    ]

    expected_msg_for_diff_attributes = [
        "Below are the file(s) with the attributes of the stanza that are not auto generated by the UCC framework. "
        "(Optionally), you can raise feature requests for UCC framework at "
        "'https://github.com/splunk/addonfactory-ucc-generator/issues/new/choose' with the output mentioned below.",
        f"1) {str(src_file)}[ui] :: docs_section_override",
        "Source: AddOns:released, Generated:",
    ]

    for line in expected_msg_for_same_stanza:
        assert line in caplog.text

    for line in expected_msg_for_diff_stanza:
        assert line in caplog.text

    for line in expected_msg_for_diff_attributes:
        assert line in caplog.text
