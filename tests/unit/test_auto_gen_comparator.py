from splunk_add_on_ucc_framework import auto_gen_comparator
from unittest.mock import MagicMock


def test_print_files_blank():
    obj = auto_gen_comparator.CodeGeneratorDiffChecker("", "")
    obj.common_files = {}
    logger = MagicMock()
    obj.print_files(logger)

    assert logger.warning.call_count == 0


def test_print_files_not_blank():
    obj = auto_gen_comparator.CodeGeneratorDiffChecker("", "")
    obj.common_files = {"file.1": "full_path_file.1"}
    logger = MagicMock()
    obj.print_files(logger)

    exp_msg = []
    exp_msg.append("-" * 120)
    exp_msg.append(
        "Below are the file(s) that are auto generated by the UCC framework. "
        "The below files can be removed from your repository:"
    )
    exp_msg.extend([f"{idx}) {f}" for idx, f in enumerate(obj.common_files.values())])
    exp_msg.append(
        "Please refer UCC framework documentation for the latest "
        "features that ables you to remove the above files."
    )
    exp_msg.append("-" * 120)

    logger.warning.assert_called_once_with("\n".join(exp_msg))
    assert logger.warning.call_count == 1


def test_find_common_files():
    obj = auto_gen_comparator.CodeGeneratorDiffChecker("", "")
    auto_gen_comparator.walk = MagicMock()
    src_dir = [("root", ["dir1", "dir2", "dir3"], ["file1", "file2", "file3", "file4"])]
    dest_dir = [("root", ["dir1", "dir2"], ["file1", "file2"])]
    auto_gen_comparator.walk.side_effect = [src_dir, dest_dir]

    # here the ingore_file_list is empty, an add-on with no alert actions
    obj.find_common_files()

    assert obj.common_files == {"file1": "root/file1", "file2": "root/file2"}


def test_find_common_files_with_ignore_files():
    obj = auto_gen_comparator.CodeGeneratorDiffChecker("", "")
    auto_gen_comparator.walk = MagicMock()
    src_dir = [("root", ["dir1", "dir2", "dir3"], ["file1", "file2", "file3", "file4"])]
    dest_dir = [("root", ["dir1", "dir2"], ["file1", "file2"])]
    auto_gen_comparator.walk.side_effect = [src_dir, dest_dir]

    # here the ingore_file_list contains alert icons or alert script logic
    obj.find_common_files(["file1", "file2"])

    assert obj.common_files == {}
